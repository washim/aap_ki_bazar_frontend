{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../node_modules/svelte-navigator/src/Link.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tstring.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n\tconst searchIndex = url.indexOf(\"?\");\n\tconst hashIndex = url.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n\tconst pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n\t\t: \"\";\n\tconst pathname = hasSearchIndex\n\t\t? pathnameAndSearch.substr(0, searchIndex)\n\t\t: pathnameAndSearch;\n\treturn { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n\tmanageFocus,\n\tannounceNavigation,\n) =>\n\t// Wait until the dom is updated, so we can look for headings\n\ttick().then(() => {\n\t\tif (!focusCandidate || initialNavigation) {\n\t\t\tinitialNavigationOccurred();\n\t\t\treturn;\n\t\t}\n\t\tif (manageFocus) {\n\t\t\thandleFocus(focusCandidate.route);\n\t\t}\n\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\tget(location),\n\t\t\t);\n\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\tannouncementText.set(message);\n\t\t\t});\n\t\t}\n\t\tclearFocusCandidate();\n\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, createLocation } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? createLocation(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t});\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tstyle={visuallyHiddenStyle}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport {\n\t\tuseLocation,\n\t\tuseResolve,\n\t\tuseHistory,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { shouldNavigate, isFunction } from \"./utils\";\n\timport { startsWith } from \"./paths\";\n\timport { LINK_ID } from \"./warning\";\n\n\texport let to;\n\texport let replace = false;\n\texport let state = {};\n\texport let getProps = null;\n\n\tusePreflightCheck(LINK_ID, $$props);\n\n\tconst location = useLocation();\n\tconst dispatch = createEventDispatcher();\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\n\t// We need to pass location here to force re-resolution of the link,\n\t// when the pathname changes. Otherwise we could end up with stale path params,\n\t// when for example an :id changes in the parent Routes path\n\t$: href = resolve(to, $location);\n\t$: isPartiallyCurrent = startsWith($location.pathname, href);\n\t$: isCurrent = href === $location.pathname;\n\t$: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n\t$: props = (() => {\n\t\tif (isFunction(getProps)) {\n\t\t\tconst dynamicProps = getProps({\n\t\t\t\tlocation: $location,\n\t\t\t\thref,\n\t\t\t\tisPartiallyCurrent,\n\t\t\t\tisCurrent,\n\t\t\t});\n\t\t\treturn { ...$$restProps, ...dynamicProps };\n\t\t}\n\t\treturn $$restProps;\n\t})();\n\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\n\t\tif (shouldNavigate(event)) {\n\t\t\tevent.preventDefault();\n\t\t\t// Don't push another entry to the history stack when the user\n\t\t\t// clicks on a Link to the page they are currently on.\n\t\t\tconst shouldReplace = isCurrent || replace;\n\t\t\tnavigate(href, { state, replace: shouldReplace });\n\t\t}\n\t}\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n\t<slot />\n</a>\n","<script>\n    import { Router, Route, Link, navigate } from \"svelte-navigator\";\n    import { onMount } from 'svelte';\n    \n    let cart = [];\n    let products = [];\n    let customer = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {\n        'name': '',\n        'mobile': '',\n        'address': '',\n        'ward_no': '',\n        'pincode': ''\n    };\n    let itemWeight = {id: 0, weight: \"\"};\n    let orderCompleted = false;\n    let orderMessage = '';\n    \n    onMount(async () => {\n\t\tconst res = await fetch(`https://ecommerce.nbsols.com/api/products/`);\n\t\tproducts = await res.json();\n\t});\n\n    const addToCart = (product) => {\n        if (product.id === itemWeight.id) {\n            for(let item of cart) {\n                if(item.id === product.id) {\n                    product.quantity += 1;\n                    product.weight = itemWeight.weight;\n                    cart = cart;\n                    return;\n                }\n            }\n            product.weight = itemWeight.weight;\n            cart = [...cart, product]\n        } else {\n            alert('Choose product weight');\n        }\n    }\n\n    const plusItem = (product) => {\n        for(let item of cart) {\n\t\t\tif(item.id === product.id) {\n\t\t\t\titem.quantity += 1\n\t\t\t\tcart = cart;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n    }\n\n    const minusItem = (product) => {\n        for(let item of cart) {\n            if(item.id === product.id) {\n                if(product.quantity > 1 ) {\n                    product.quantity -= 1\n                    cart = cart\n                } else {\n                    cart = cart.filter((cartItem) => cartItem != product)\n                }\n                return;\n            }\n\t\t}\n    }\n\n    async function doSubmitOrder() {\n        if (cart.length > 0) {\n            const customer_data = JSON.stringify(customer);\n            const create_shipping = await fetch('https://ecommerce.nbsols.com/api/shipping/', {\n                method: 'POST',\n                headers: {'Authorization': 'Basic YWRtaW46UGFzc3dvcmRANzg2Iw==', 'Content-Type': 'application/json'},\n                body: customer_data\n            });\n            const shipping = await create_shipping.json()\n            localStorage.setItem(\"shippingAddress\", customer_data);\n            if (shipping.id) {\n                const create_invoice = await fetch('https://ecommerce.nbsols.com/api/invoices/', {\n                    method: 'POST',\n                    headers: {'Authorization': 'Basic YWRtaW46UGFzc3dvcmRANzg2Iw==', 'Content-Type': 'application/json'},\n                    body: JSON.stringify({\"status\": \"processed\", \"status_message\": \"Processed\",\"shipping\": shipping.id})\n                });\n                const invoice = await create_invoice.json();\n                if (invoice.id) {\n                    for(let product of cart) {\n                        const create_order = await fetch('https://ecommerce.nbsols.com/api/orders/', {\n                            method: 'POST',\n                            headers: {'Authorization': 'Basic YWRtaW46UGFzc3dvcmRANzg2Iw==', 'Content-Type': 'application/json'},\n                            body: JSON.stringify({\"quantity\": product.quantity, \"weight\": product.weight, \"invoice\": invoice.id, \"product\": product.id})\n                        });\n                    }\n                }\n                orderMessage = 'Your order successfully placed.';\n                orderCompleted = true;\n                cart = [];\n                itemWeight = {id: 0, weight: \"\"};\n                setTimeout(() => {orderCompleted = false; orderMessage = '';}, 5000);\n            }\n        } else {\n            orderMessage = 'Cart become empty. Choose products again for new order.';\n        }\n    }\n\n    $: total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0)\n</script>\n\n<Router>\n    <main>\n        <!-- main wrapper  -->\n        <div class=\"main-wrapper bg-lightgrey\">\n            <!-- HEADER WRAPPER -->\n            <div class=\"header-menu-mob pt-2 pb-2 shadow-xss position-fixed w-100 z-index-5 bg-white d-none d-block-md\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col text-start\"><button class=\"navbar-toggler border-0\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#menumodal\"><span class=\"navbar-toggler-icon\"></span></button></div>\n                        <div class=\"col text-center\"><a href=\"index.html\"><div class=\"logo w-90\">Aap ki Bazar</div></a></div>\n                        <div class=\"col text-end\"><a href=\"index.html\" class=\"nav-icon mt-1 d-inline-block\" data-bs-toggle=\"modal\" data-bs-target=\"#cartmodal\"><i class=\"feather-shopping-bag text-grey-500 font-xl\"></i></a></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"upper-header pt-2 pb-2 bg-green d-none d-lg-block\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <ul class=\"nav\">\n                                <li class=\"nav-item\"><Link to=\"about\" class=\"ps-0\">About</Link></li>\n                            </ul>\n                        </div>\n                        <div class=\"col-lg-6 text-end\">\n                            <ul class=\"navbar-nav float-end\">\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" href=\"#\">Refer to your friends and Earn </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"header-wrapper bg-invert pt-4 pb-4 z-index-5 ovh bg-green d-none d-lg-block\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 d-flex\">\n                            <a href=\"#\"><div class=\"logo\">Aap ki Bazar</div></a>\n                            <div class=\"header-search ms-auto me-2 d-flex\">\n                                <a href=\"#\" class=\"nav-icon\" data-bs-toggle=\"modal\" data-bs-target=\"#cartmodal\"><i class=\"feather-shopping-bag text-grey-500\"></i> <span style=\"color: white; position:relative; top:-5px;\">Cart Total: ₹{total}</span></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"lower-header pt-0 pb-0 bg-invert shadow-xss z-index-1 bg-deepgreen d-none d-lg-block\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-3 pe-0\">\n                            <div class=\"dropdown dropdown-right border-0\">\n                                <button class=\"btn border-0 rounded-0 dropdown-toggle dropdown-toggle-white bg-warning ps-3\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#categorymodal\"><i class=\"feather-align-left\"></i> All Categories</button>\n                                <ul class=\"dropdown-menu w-100 border-0 mt-3 shadow-xss\" >\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Biscuits &amp; Snacks </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Breads &amp; Bakery </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Breakfast &amp; Dairy <span class=\"alert-success text-success\">Offer</span></a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Frozen Foods </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Fruits &amp; Vegetables </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Grocery &amp; Staples </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Household Needs </a></li>\n                                    <li><a class=\"dropdown-item dropdown-toggle\" href=\"#\">Meats &amp; Seafood </a></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-9\">\n                            <div class=\"navbar navbar-expand-lg p-0\">\n                                <div class=\"navbar-collapse collapse show\" id=\"main_nav\" style=\"\">\n                                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#main_nav\" aria-expanded=\"true\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button>\n                                    <ul class=\"navbar-nav\">\n                                        <li class=\"nav-item active\">\n                                            <Link to=\"/\" class=\"nav-link\">Home</Link>\n                                        </li>\n                                        <li class=\"nav-item active\">\n                                            <Link to=\"about\" class=\"nav-link\">About Us</Link>\n                                        </li>\n                                        <li class=\"nav-item active\">\n                                            <a class=\"nav-link\" href=\"#\">Terms and Conditions</a>\n                                        </li>\n                                    </ul>\n                                    <ul class=\"navbar-nav ms-auto\">\n                                        <li class=\"nav-item text-grey-200 fw-500 font-xssss\">Need help? Call Us : <a href=\"tel:03340005000\" class=\"fw-700 text-white\" >+ 033 4000 5000</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>        \n                    </div>\n                </div>\n            </div>\n            <!-- HEADER WRAPPER -->\n            <div class=\"main-wrap pt-4\">\n                <div class=\"container\">\n                    <Route path=\"/\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-12\">\n                                <div class=\"row rounded-6 mb-3 md-mt-6 bg-white\">\n                                    {#each products as product}\n                                    <div class=\"col-lg-3 col-sm-3 col-xs-6 p-3 border-none-xs border-end rounded-0 posr\">\n                                        <a href=\"#\" class=\"d-block text-center\">\n                                            <img src=\"{product.picture}\" alt=\"product-image\" class=\"w-100 mt-3 mb-3 d-inline-block p-2 pt-0\" style=\"width: 171px; height:148px;\">\n                                        </a>\n                                        <div class=\"clearfix\"></div>\n                                        <h2 class=\"mt-2\"><a href=\"single-product.html\" class=\"text-grey-700 fw-600 font-xsss lh-22 d-block ls-0\">{product.name}</a></h2>\n                                        <h6 class=\"font-xss ls-3 fw-700 text-current d-flex\">\n                                            <span class=\"font-xsssss text-grey-500\">₹</span>{product.price} <span class=\"ms-auto text-grey-500 fw-500 mt-1 font-xsssss\"><select on:change={e => itemWeight = {id: product.id, weight: e.target.value}}>{@html product.weight_attributes}</select></span>\n                                        </h6>\n                                        <button type=\"button\" class=\"btn btn-sm btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#cartmodal\" on:click={() => addToCart(product)}>Add to cart</button>\n                                    </div>\n                                    {/each}\n                                </div>\n                            </div>\n                        </div>\n                    </Route>\n                    <Route path=\"about\">\n                        <h3>About</h3>\n                        <p>That's what it's all about!</p>\n                    </Route>\n                </div>\n            </div>\n            <!-- FOOTER WRAPPER -->\n            <div class=\"lower-footer bg-white pb-3 pt-3\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6 text-center text-sm-start xs-mb-3\"><p class=\"text-grey-500 fw-500 font-xssss mb-0\">@ Copyright 2021 All rights reserved.</p></div>\n                    </div>\n                </div>\n            </div>\n            <!-- FOOTER WRAPPER -->\n        </div>\n        <div class=\"modal fade\" id=\"checkoutproduct\">\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"max-width: 420px;\">\n                <div class=\"modal-content theme-dark-bg p-0 border-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 bg-grey font-xsssss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-4 me-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"modal-body vw100 text-start p-0 h-100\">\n                        <div class=\"card p-4 border-0 text-start h-100 \">\n                            <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-3 mt-n2 d-block\">Shipping Address</h4>\n                            <form on:submit|preventDefault={doSubmitOrder}>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <div class=\"form-group\">\n                                            <label class=\"mont-font fw-600 font-xssss mb-2 white-text\">Name</label>\n                                            <input type=\"text\" class=\"form-control theme-black-bg rounded-10\" bind:value={customer.name} required>\n                                        </div>        \n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <div class=\"form-group\">\n                                            <label class=\"mont-font fw-600 font-xssss mb-2 white-text\">Mobile</label>\n                                            <input type=\"text\" class=\"form-control theme-black-bg rounded-10\" bind:value={customer.mobile} required>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <div class=\"form-group\">\n                                            <label class=\"mont-font fw-600 font-xssss mb-2 white-text\">Address</label>\n                                            <input type=\"text\" class=\"form-control theme-black-bg rounded-10\" bind:value={customer.address} required>\n                                        </div>        \n                                    </div>\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <div class=\"form-group\">\n                                            <label class=\"mont-font fw-600 font-xssss mb-2 white-text\">Ward No</label>\n                                            <input type=\"text\" class=\"form-control theme-black-bg rounded-10\" bind:value={customer.ward_no} required>\n                                        </div>        \n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <div class=\"form-group\">\n                                            <label class=\"mont-font fw-600 font-xssss mb-2 white-text\">Pincode</label>\n                                            <input type=\"text\" class=\"form-control theme-black-bg rounded-10\" bind:value={customer.pincode} required>\n                                        </div>        \n                                    </div>\n                                    <div class=\"col-lg-12\">\n                                        {orderMessage}\n                                        <button type=\"submit\" class=\"btn w-100 bg-current font-xsss ls-1 fw-600 text-white rounded-10 d-block text-center\" disabled={orderCompleted}>Confirm Order</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- MENU MODAL -->\n        <div class=\"modal fade left modal-scrollable\" id=\"menumodal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\">\n                <div class=\"modal-content theme-dark-bg p-0 border-0 rounded-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 bg-grey font-xsssss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-4 me-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"modal-body vw100 text-start p-0 h-100\">\n                        <div class=\"card p-4 border-0 text-start h-100 \">\n                            <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-3 d-block ls-0\"> Menu</h4>\n                            \n                            <ul class=\"navbar-nav\">\n                                <li class=\"nav-item active dropdown\">\n                                    <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Home </a>\n                                    <ul class=\"dropdown-menu border-0 shadow-xss\">\n                                    <li><a class=\"dropdown-item\" href=\"g-1.html\"> Grocery One</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"g-2.html\"> Grocery Two </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"g-3.html\"> Grocery Three </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"g-4.html\"> Grocery Four</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"g-5.html\"> Grocery Five</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"g-6.html\"> Grocery Six </a></li>\n                                    </ul>\n                                </li>\n                                \n                                <li class=\"nav-item active dropdown\">\n                                    <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Shop <span class=\"bg-danger\">New</span></a>\n                                    <ul class=\"dropdown-menu border-0 shadow-xss\">\n                                    <li><a class=\"dropdown-item\" href=\"shop-list-1.html\"> Shop One</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"shop-list-2.html\"> Shop Two </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"shop-list-3.html\"> Shop Three </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"shop-list-4.html\"> Shop Four</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"shop-list-5.html\"> Shop Five </a></li>\n                                    </ul>\n                                </li>\n                                <li class=\"nav-item active dropdown\">\n                                    <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dashboard</a>\n                                    <ul class=\"dropdown-menu border-0 shadow-xss\">\n                                    <li><a class=\"dropdown-item\" href=\"dashboard.html\"> Dashboard</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"address.html\"> Saved Address </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"orders.html\"> Orders </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"coupon.html\"> Coupon</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"payment.html\"> Payment </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"notification.html\"> Notification </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"default.html\"> Logout </a></li>\n                                    </ul>\n                                </li>\n                                <li class=\"nav-item active dropdown\">\n                                    <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Product</a>\n                                    <ul class=\"dropdown-menu border-0 shadow-xss\">\n                                    <li><a class=\"dropdown-item\" href=\"single-product-1.html\"> Single One</a></li>\n                                    <li><a class=\"dropdown-item\" href=\"single-product-2.html\"> Single Two </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"single-product-3.html\"> Single Three </a></li>\n                                    <li><a class=\"dropdown-item\" href=\"single-product-4.html\"> Single Four</a></li>\n                                    </ul>\n                                </li>\n                                <li class=\"nav-item active dropdown\">\n                                            <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Pages</a>\n                                            <ul class=\"dropdown-menu border-0 shadow-xss\">\n                                            <li><a class=\"dropdown-item\" href=\"about.html\"> About</a></li>\n                                            <li><a class=\"dropdown-item\" href=\"contact.html\"> Contact </a></li>\n                                            <li><a class=\"dropdown-item\" href=\"blog.html\"> Blog </a></li>\n                                            <li><a class=\"dropdown-item\" href=\"blog-single.html\"> Single Blog</a></li>\n                                            <li><a class=\"dropdown-item\" href=\"faq.html\"> Faq</a></li>\n                                            </ul>\n                                        </li>\n                            </ul>\n                            <div class=\"card h-auto mt-auto p-4 w-100 rounded-10 theme-bg border-0 text-center bg-image-cover\" style=\"background-image: url(https://via.placeholder.com/1071x319.png);\">\n                                <div class=\"card-body text-center p-2 mb-2\">\n                                    <h4 class=\"text-grey-900 white-text mb-3 font-sm fw-500\">Become a <b class=\"text-grey-900 white-text\">pro</b> <br> Get more <b class=\"text-grey-900 white-text\">features</b></h4>\n                                    <a href=\"login-one.html\" class=\"btn rounded-25 bg-current white-text text-white w-150\">Upgrade</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>              \n        </div>\n        <!-- CATEGORY MODAL -->\n\n        <!-- CATEGORY MODAL -->\n        <div class=\"modal fade left modal-scrollable\" id=\"categorymodal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\">\n                <div class=\"modal-content theme-dark-bg p-0 border-0 rounded-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 bg-grey font-xsssss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-3 me-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"modal-body vw100 text-start p-0\">\n                        <div class=\"card p-4 border-0 text-start\">\n                            <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-3 mt-n2 d-block ls-0\"> Categories</h4>\n                            <ul class=\"ms-0 ps-0 border-0 mt-3\">\n                                <li><a href=\"#\" class=\"d-flex\" data-bs-toggle=\"dropdown\"> Beverages <i class=\"feather-chevron-right\"></i></a>\n                                    <ul class=\"submenu dropdown-menu pt-0 pb-0 ps-3\">\n                                        <li><a class=\"dropdown-item\" href=\"#\">Water</a></li>\n                                        <li><a class=\"dropdown-item\" href=\"#\">Sparkling Water</a></li>\n                                        <li><a class=\"dropdown-item\" href=\"#\">Soda & Pop</a></li>\n                                        <li><a class=\"dropdown-item\" href=\"#\">Coffee</a></li>\n                                        <li><a class=\"dropdown-item\" href=\"#\">Milk & Plant-Based Milk</a></li>\n                                    </ul>\n                                </li>\n                                <li><a href=\"#\" class=\"d-flex\"> Biscuits & Snacks <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Breads & Bakery <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Breakfast & Dairy <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Frozen Foods <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Fruits & Vegetables <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Grocery & Staples <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Household Needs <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\"> Meats & Seafood <i class=\"feather-chevron-right\"></i></a></li>\n\n                                <li><a href=\"#\" class=\"d-flex\">Eggs Substitutes <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\">Honey Vegetables <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\">Marmalades Staples <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\">Sour Cream and Dips <i class=\"feather-chevron-right\"></i></a></li>\n                                <li><a href=\"#\" class=\"d-flex\">Yogurt Seafood <i class=\"feather-chevron-right\"></i></a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>              \n        </div>\n        <!-- CATEGORY MODAL -->\n        <!-- CART MODAL -->\n        <div class=\"modal fade right modal-scrollable\" id=\"cartmodal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"width: 350px;\">\n                <div class=\"modal-content theme-dark-bg p-0 border-0 rounded-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 bg-grey font-xsssss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-3 me-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"cart-box vh-100\" >\n                        <div class=\"modal-body vh-100 text-start p-0 d-flex align-items-start flex-column\">\n                            <div class=\"card w-100 p-4 pb-0 border-0 text-start\">\n                                <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-3 mt-n2 d-block\"> Cart</h4>\n                                {#each cart as cartitem }\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\"><img src=\"{cartitem.picture}\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-white rounded-6\"/></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">{cartitem.weight}</span>\n                                        <a href=\"single-product.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">{cartitem.name}</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">₹</span>{cartitem.price * cartitem.quantity} </h6>\n                                        <div class=\"cart-count float-end \">\n                                            <div class=\"number\">\n                                                <span class=\"minus\" on:click={() => minusItem(cartitem)}>-</span>\n                                                <input type=\"text\" class=\"open-font\" value=\"{cartitem.quantity}\">\n                                                <span class=\"plus\" on:click={() => plusItem(cartitem)}>+</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/each}\n                            </div>              \n                            <div class=\"card w-100 p-4 pt-0 border-0 text-start mt-auto\">\n                                <!-- <hr /> -->\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12\">\n                                        <h4 class=\"text-grey-900 font-xssss fw-600 mb-3 d-flex\">Delivery Charges <span class=\"ms-auto text-grey-500\">₹0.00</span></h4>\n                                        <h4 class=\"text-grey-900 font-xssss fw-600 mb-2 d-flex\">Subtotal <span class=\"ms-auto text-grey-500\">₹{total}</span></h4>\n                                        <h4 class=\"text-grey-900 font-xss fw-600 mb-3 d-flex\">Total <span class=\"ms-auto\">₹{total}</span></h4>\n                                    </div>\n                                </div>\n                                {#if cart.length > 0}\n                                <a href=\"#\" class=\"w-100 bg-current text-white rounded-6 text-center btn\" data-bs-toggle=\"modal\" data-bs-dismiss=\"modal\" data-bs-target=\"#checkoutproduct\" id=\"checkout2\">Checkout</a>\n                                {/if}\n                            </div>      \n                        </div>\n                    </div>\n                    <div class=\"checkout-box vh-100\" style=\"display: none;\">\n                        <div class=\"modal-body vh-100 text-start p-0 d-flex align-items-start flex-column\">\n                            <div class=\"card w-100 p-4 pb-0 border-0 text-start\">\n                                <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-4 mt-n2 d-block\"> Checkout</h4>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"Name\">Name</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter your name\" id=\"Name\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"Email\">Email</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter your email\" id=\"Email\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"Phone\">Phone</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter your phone\" id=\"Phone\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"Address\">Address</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter your address\" id=\"Address\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"Zip\">Zip Code</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter here\" id=\"Zip\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"City\">City</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter here\" id=\"City\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"Location\">Location</label>\n                                            <input type=\"text\" class=\"form-control bg-greylight border-0\" placeholder=\"Enter here location\" id=\"Location\">\n                                        </div>\n                                        <div class=\"form-check\">\n                                            <input class=\"form-check-input font-xs\" type=\"checkbox\" value=\"Drinks\" id=\"flexCheckStock7\">\n                                            <label class=\"form-check-label\" for=\"flexCheckStock7\">Save shipping address</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>              \n                            <div class=\"card w-100 p-4 pt-0 border-0 text-start mt-auto\">\n                                <a href=\"#\" class=\"w-100 bg-current text-white rounded-6 text-center btn\" id=\"payment\">Payment</a>\n                            </div>      \n                        </div>\n                    </div>\n\n                    <div class=\"payment-box vh-100\" style=\"display: none;\">\n                        <div class=\"modal-body vh-100 text-start p-0 d-flex align-items-start flex-column\">\n                            <div class=\"card w-100 p-4 pb-0 border-0 text-start\">\n                                <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-4 mt-n2 d-block\"> Payment</h4>\n                                <div class=\"col-lg-12 mt-2\">\n                                    <div class=\"card bg-white rounded-6 border-0 shadow-xss p-0\">\n                                        <div class=\"card-body d-flex justify-content-between align-items-end p-4\">\n                                            <div>\n                                                <h4 class=\"text-grey-600 mb-0 d-flex font-xsss align-items-center justify-content-between mt-0 fw-600\">\n                                                    <img src=\"https://via.placeholder.com/45x45.png\" alt=\"image\" class=\"float-left me-4\">\n                                                    4321 4432 6565 **** \n                                                </h4>\n                                            </div>\n                                            <div class=\"round float-right mb-2\">\n                                                <input id=\"radio-1\" class=\"radio-custom\" name=\"radio-group\" type=\"radio\" checked=\"\">\n                                                <label for=\"radio-1\" class=\"radio-custom-label m-0\"></label>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div class=\"card bg-white rounded-6 border-0 shadow-xss mt-3 p-0\">\n                                        <div class=\"card-body d-flex justify-content-between align-items-end p-4\">\n                                            <div>\n                                                <h4 class=\"text-grey-600 mb-0 d-flex font-xsss align-items-center justify-content-between mt-0 fw-600\">\n                                                    <img src=\"https://via.placeholder.com/45x45.png\" alt=\"image\" class=\"float-left me-4\">\n                                                    ***port@gmail.com\n                                                </h4>\n                                            </div>\n                                            <div class=\"round float-right mb-2\">\n                                                <input id=\"radio-2\" class=\"radio-custom\" name=\"radio-group\" type=\"radio\">\n                                                <label for=\"radio-2\" class=\"radio-custom-label m-0\"></label>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    \n                                    <div class=\"card bg-white rounded-6 border-0 shadow-xss mt-3 p-0\">\n                                        <div class=\"card-body d-flex justify-content-between align-items-end p-4\">\n                                            <div>\n                                                <h4 class=\"text-grey-600 mb-0 d-flex font-xsss align-items-center justify-content-between mt-0 fw-600\">\n                                                    <img src=\"https://via.placeholder.com/45x45.png\" alt=\"image\" class=\"float-left me-4\">\n                                                    4321 4432 6565 **** \n                                                </h4>\n                                            </div>\n                                            <div class=\"round float-right mb-2\">\n                                                <input id=\"radio-4\" class=\"radio-custom\" name=\"radio-group\" type=\"radio\">\n                                                <label for=\"radio-4\" class=\"radio-custom-label m-0\"></label>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"card bg-greylight p-4 mt-3 mb-3 border-0\">\n                                        <h4 class=\"font-xsssss fw-700 ls-3 mb-4\">ADD NEW CARD</h4>\n\n                                        <div class=\"form-group mb-2\">\n                                            <input type=\"text\" class=\"form-control bg-white border-0\" placeholder=\"Card Number\">\n                                        </div>\n                                        <div class=\"form-group mb-2\">\n                                            <input type=\"text\" class=\"form-control bg-white border-0\" placeholder=\"Card Holder Name\">\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-lg-6 pe-2\">\n                                                <div class=\"form-group\">\n                                                    <input type=\"text\" class=\"form-control bg-white border-0\" placeholder=\"Month\">\n                                                </div>\n                                            </div>\n                                            <div class=\"col-lg-6 ps-2\">\n                                                <div class=\"form-group\">\n                                                    <input type=\"text\" class=\"form-control bg-white border-0\" placeholder=\"Year\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-check\">\n                                            <input class=\"form-check-input font-xs\" type=\"checkbox\" value=\"Drinks\" id=\"flexCheckStock9\">\n                                            <label class=\"form-check-label\" for=\"flexCheckStock9\">Save as default</label>\n                                        </div>\n                                        <a href=\"#\" class=\"w-100 bg-black-08 text-white rounded-6 text-center btn mt-2\">Save</a>\n                                        \n                                    </div>\n                                    \n                                </div>\n                            </div>              \n                            <div class=\"card w-100 p-4 pt-0 border-0 text-start mt-auto\">\n                                <a href=\"#\" class=\"w-100 bg-current text-white rounded-6 text-center btn\" id=\"checkout3\">place Order</a>\n                            </div>      \n                        </div>\n                    </div>\n                </div>\n            </div>              \n        </div> \n        <!-- CART MODAL -->\n\n        <!-- SAVED MODAL -->\n        <div class=\"modal fade right modal-scrollable\" id=\"savedmodal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"width: 350px;\">\n                <div class=\"modal-content theme-dark-bg p-0 border-0 rounded-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 bg-grey font-xsssss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-3 me-3\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"cart-box vh-100\" >\n                        <div class=\"modal-body vh-100 text-start p-0 d-flex align-items-start flex-column\">\n                            <div class=\"card w-100 p-4 pb-0 border-0 text-start\">\n                                <h4 class=\"fw-700 font-lg text-grey-900 text-start mb-3 mt-n2 d-block\"> Saved</h4>\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\" data-bs-toggle=\"modal\" data-bs-target=\"#productmodal\"><img src=\"https://via.placeholder.com/171x148.png\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-greylight rounded-6\"></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">500gm</span>\n                                        <a href=\"single-product-1.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">Blue Diamond Almonds Lightly Salted</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">$</span>29 </h6>\n                                        <a href=\"#\" class=\"text-uppercase font-xsssss text-grey-900 fw-700 ls-1 bg-greylight float-end w-125 lh-20 rounded-6 btn\">Add to cart</a>\n                                    </div>\n                                </div>\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\"><img src=\"https://via.placeholder.com/171x148.png\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-greylight rounded-6\"></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">500gm</span>\n                                        <a href=\"single-product-1.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">Blue Diamond Almonds Lightly Salted</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">$</span>49 </h6>\n                                        <a href=\"#\" class=\"text-uppercase font-xsssss text-grey-900 fw-700 ls-1 bg-greylight float-end w-125 lh-20 rounded-6 btn\">Add to cart</a>\n                                    </div>\n                                </div>\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\"><img src=\"https://via.placeholder.com/171x148.png\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-greylight rounded-6\"></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">100gm</span>\n                                        <a href=\"single-product-1.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">Blue Diamond Almonds Lightly Salted</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">$</span>99 </h6>\n                                        <a href=\"#\" class=\"text-uppercase font-xsssss text-grey-900 fw-700 ls-1 bg-greylight float-end w-125 lh-20 rounded-6 btn\">Add to cart</a>\n                                    </div>\n                                </div>\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\"><img src=\"https://via.placeholder.com/171x148.png\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-greylight rounded-6\"></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">2Kg</span>\n                                        <a href=\"single-product-1.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">Blue Diamond Almonds Lightly Salted</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">$</span>39 </h6>\n                                        <a href=\"#\" class=\"text-uppercase font-xsssss text-grey-900 fw-700 ls-1 bg-greylight float-end w-125 lh-20 rounded-6 btn\">Add to cart</a>\n                                    </div>\n                                </div>\n                                <div class=\"row mb-3\">\n                                    <div class=\"col-md-5 col-xs-5\"><a href=\"#\" class=\"d-block text-center\"><img src=\"https://via.placeholder.com/171x148.png\" alt=\"product-image\" class=\"w-100 d-inline-block pt-3 pb-3 bg-greylight rounded-6\"></a></div>\n                                    <div class=\"col-md-7 col-xs-7 ps-0\">\n                                        <span class=\"ms-auto text-grey-500 fw-500 lh-1 font-xsssss mt-0 w-100 mb-2\">2Kg</span>\n                                        <a href=\"single-product-1.html\" class=\"text-grey-900 fw-600 font-xssss lh-22 d-block ls-0 mb-2\">Blue Diamond Almonds Lightly Salted</a>\n                                        <h6 class=\"font-xs ls-3 fw-700 text-current float-start mt-1\"><span class=\"font-xsssss text-grey-500\">$</span>39 </h6>\n                                        <a href=\"#\" class=\"text-uppercase font-xsssss text-grey-900 fw-700 ls-1 bg-greylight float-end w-125 lh-20 rounded-6 btn\">Add to cart</a>\n                                    </div>\n                                </div>\n                            </div>              \n                            <div class=\"card w-100 p-4 pt-0 border-0 text-start mt-auto\">\n                                <a href=\"#\" class=\"w-100 bg-current text-white rounded-6 text-center btn\">Cart</a>\n                            </div>      \n                        </div>\n                    </div>\n                    \n                </div>\n            </div>              \n        </div> \n        <!-- SAVED MODAL -->\n        <!-- SINGLE PRODUCT MODAL -->\n        <div class=\"modal fade right modal-scrollable\" id=\"productmodal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered\" style=\"width: 350px;\">\n                <div class=\"modal-content theme-dark-bg border-0 rounded-0\">\n                    <button type=\"button\" class=\"btn-close z-index-5 font-xsss w-26 h-26 text-center rounded-circle posa right-0 top-0 mt-0 me-0\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    <div class=\"cart-box vh-100\">\n                        <div class=\"modal-body vh-100 text-start p-0 d-flex align-items-start flex-column p-4\">\n                            <div class=\"card border-0 w-100 text-center d-inline-block mb-3\">\n                                <span class=\"ls-3 font-xsssss text-white text-uppercase bg-current fw-700 p-2 d-inline-block rounded-3 posa left-15 top-15 z-index-5\">30% off</span>\n                                <div class=\"owl-carousel product-banner owl-theme overflow-hidden nav-none owl-dots-none owl-arrow-center\">\n                                    <div class=\"item me-0 bg-greylight text-center\"><img src=\"https://via.placeholder.com/200x400.png\" alt=\"product-image\" class=\"shadow-none w-150 d-inline-block rounded-6 p-4\"></div>\n                                    <div class=\"item me-0 bg-greylight text-center\"><img src=\"https://via.placeholder.com/200x400.png\" alt=\"product-image\" class=\"shadow-none w-150 d-inline-block rounded-6 p-4\"></div>\n                                </div>\n                            </div>\n                            <div class=\"card border-0 w-100 mt-2\">\n                                <div class=\"star d-inline text-left\">\n                                    <img src=\"images/star.png\" alt=\"star\" class=\"w-12 me-1 float-start\">\n                                    <img src=\"images/star.png\" alt=\"star\" class=\"w-12 me-1 float-start\">\n                                    <img src=\"images/star.png\" alt=\"star\" class=\"w-12 me-1 float-start\">\n                                    <img src=\"images/star.png\" alt=\"star\" class=\"w-12 me-1 float-start\">\n                                    <img src=\"images/star-disable.png\" alt=\"star\" class=\"w-12 me-2 float-start\">\n                                </div>\n                                <h2 class=\"fw-700 text-grey-700 font-xss ls-0 lh-26 mt-2 mb-0 pe-lg-5\">Blue Diamond Almonds Rice Orgomart Salted</h2>\n                                <div class=\"cart-count cart-count-lg float-end mt-2\">\n                                    <h6 class=\"font-sm ls-3 fw-700 text-current float-start mt-1 me-4\"><span class=\"font-xsssss text-grey-500\">$</span>29 </h6>\n                                    <div class=\"number\">\n                                        <span class=\"minus\">-</span>\n                                        <input type=\"text\" class=\"open-font\" value=\"1\">\n                                        <span class=\"plus\">+</span>\n                                    </div>\n                                </div>\n                                <p class=\"font-xssss fw-500 mt-3 text-grey-500\">Vivamus adipiscing nisl ut dolor dignissim semper. Nulla luctus malesuada tincidunt. Class aptent taciti sociosqu ad litora torquent</p>\n                                <h5 class=\"font-xssss fw-500 text-grey-500 mt-1\"><b class=\"text-grey-700\">Category:</b> Meats & Seafood </h5>\n                                <h5 class=\"font-xssss fw-500 text-grey-500 mt-1\"><b class=\"text-grey-700\">Tags:</b> chicken, natural, Orgomart</h5>\n\n                                <h5 class=\"font-xssss fw-500 text-grey-500 mt-3 d-flex\"><i class=\"feather-bookmark font-xs text-current me-2 mt-n1\"></i> <b class=\"text-grey-700 me-1\">2 Month</b> Brand Warranty </h5>\n                                <h5 class=\"font-xssss fw-500 text-grey-500 mt-2 d-flex\"><i class=\"feather-help-circle font-xs text-current me-2 mt-n1\"></i> <b class=\"text-grey-700 me-1\">100% </b> Orgomart Product</h5>\n                                <h5 class=\"font-xssss fw-500 text-grey-500 mt-2 d-flex mb-4\"><i class=\"feather-alert-triangle font-xs text-current me-2 mt-n1\"></i> <b class=\"text-grey-700 me-1\">30 Days </b> Money back Return</h5>\n\n                                <div class=\"alert-warning text-danger p-2 text-center w-100 font-xsssss fw-500 rounded-6\">Covid-19 Info: We keep delivering.</div>\n                                <a href=\"#\" class=\"w-100 bg-current text-white rounded-6 text-center btn mt-2\">ADD to Cart</a>\n                                <a href=\"#\" class=\"w-100 bg-black-08 text-white rounded-6 text-center btn mt-2 mb-3\">ADD wishlist</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> \n    </main>\n</Router>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_input_value","input","set_style","important","removeProperty","setProperty","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","window","addListener","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","str","replace","segmentize","uri","filterFalsy","segments","split","Boolean","addQuery","pathname","query","normalizePath","path","join","pathFragments","joinedSegments","labels","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","hash","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","navigate","go","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","pushState","title","replaceState","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","current","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useHistory","useRouteBase","_route","useResolve","parentBase","ssrMatch","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","isActive","activeParams","getProps","dispatch","isPartiallyCurrent","isCurrent","ariaCurrent","dynamicProps","$$restProps","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","price","weight_attributes","picture","weight","quantity","mobile","address","ward_no","pincode","cart","products","customer","localStorage","getItem","JSON","parse","itemWeight","orderCompleted","orderMessage","res","fetch","json","addToCart","product","alert","plusItem","minusItem","cartItem","total","sum","customer_data","stringify","create_shipping","method","headers","Authorization","body","shipping","setItem","create_invoice","status","status_message","invoice","setTimeout","cartitem"],"mappings":"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"}